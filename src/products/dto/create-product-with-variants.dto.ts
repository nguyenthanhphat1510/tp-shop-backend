// File: src/products/dto/create-product-with-variants.dto.ts
import { Type } from 'class-transformer';
import { IsArray, IsNotEmpty, IsOptional, IsString, ValidateNested, ArrayMinSize } from 'class-validator';
import { CreateVariantDto } from './create-variant.dto';

export class CreateProductWithVariantsDto {
    // ðŸ“± ThÃ´ng tin sáº£n pháº©m chÃ­nh
    @IsString()
    @IsNotEmpty({ message: 'TÃªn sáº£n pháº©m khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng' })
    name: string; // "iPhone 16"

    @IsString()
    @IsNotEmpty({ message: 'MÃ´ táº£ khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng' })
    description: string;


    @IsString()
    @IsNotEmpty({ message: 'ID danh má»¥c khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng' })
    categoryId: string;

    @IsString()
    @IsNotEmpty({ message: 'ID danh má»¥c con khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng' })
    subcategoryId: string;

    // ðŸŽ¨ Danh sÃ¡ch variants (má»—i variant cÃ³ áº£nh riÃªng)
    @IsArray()
    @ArrayMinSize(1, { message: 'Pháº£i cÃ³ Ã­t nháº¥t 1 biáº¿n thá»ƒ' })
    @ValidateNested({ each: true })
    @Type(() => CreateVariantDto)
    variants: CreateVariantDto[];
}